{
    "image": "data:image\/svg+xml;base64,",
    "name": "Pohoda Transaction Report",
    "description": "Check Bank Transactions in Stormware Pohoda",
    "executable": "pohoda-transaction-report",
    "setup": "",
    "cmdparams": "",
    "requirements": "mServer",
    "deploy": "apt install pohoda-client-checker",
    "homepage": "https://github.com/Spoje-NET/pohoda-client-checker",
    "topics": "Pohoda,mServer,Bank,Check",
    "uuid": "b57f3a90-c604-4e19-8609-4af200571941",
    "environment": {
        "POHODA_URL": {
            "type": "text",
            "description": "mServer Api Endpoint",
            "defval": ""
        },
        "POHODA_USERNAME": {
            "type": "text",
            "description": "",
            "defval": ""
        },
        "POHODA_PASSWORD": {
            "type": "password",
            "description": "",
            "required": true,
            "defval": ""
        },
        "POHODA_IBAN": {
            "type": "text",
            "description": "Account IBAN",
            "required": true,
            "defval": ""
        },
        "POHODA_ICO": {
            "type": "text",
            "description": "Organization Number",
            "required": true,
            "defval": ""
        },
        "REPORT_SCOPE": {
            "type": "text",
            "description": "Time scope of transactions downloaded",
            "defval": "last_month",
            "required": false
        },
        "RESULT_FILE": {
            "type": "string",
            "description": "write output json data to",
            "defval": "transaction_report.json",
            "required": false
        }
    },
    "multiflexi": "1.7.3"
}
